/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) 
    {
        if(list1 == null) return list2;
        if(list2 == null) return list1; 
        
        
        ListNode head = new ListNode();
        ListNode current = new ListNode(); 

        head.val = list1.val;
        current = head; 

        if(list1.val > list2.val) 
        {
            head.val = list2.val;
            list2 = list2.next;
        }
        else
        {
            list1 = list1.next;
        }

        while(list1 != null && list2 != null) 
        {
            if(list1.val < list2.val) 
            {
                current.next = list1;
                list1 = list1.next;
            }
            else 
            {
                current.next = list2;
                list2 = list2.next;
            }

            current = current.next; 
        }

        //when one list is empty, append the other list
        if(list1 != null) 
        {
            current.next = list1; 
        }
        else
        {
            current.next = list2;
        }


        return head;
    }
}
